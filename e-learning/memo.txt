*********************************************************
  e-learning
    2021/12
*********************************************************

【システム概要】
e-learningシステムを作る。
問題や解答はjsonで設定し、気楽に問題の変更ができるようなものにする。



【ディレクトリ構成】
/01.document
  ・デザイン（psdファイル）

/02.cording
  ・WebComponents版ソース一式
  （出来上がりのイメージカラーはオレンジ+黄緑）

/02.cording2
  ・Lit版ソース一式
  （出来上がりのイメージカラーはピンク+緑）



【前提】
・とにかくWebコンポーネントを使う！！！
・問題や解答はjsonで保持。
・問題をシャッフルできるようにする（するかしないかはjsonで指定）
・ラジオボタン形式（選択肢１つだけ選ぶ）とチェックボックス形式（複数選択）の両方を用意する
・問題文は解答済みのものも全て表示させておく。ただし、選択肢の変更は不可とする
・最初の画面でオプションボタンを押下した状態で、OKボタンを押すことにより、問題のシャッフルをしない
・レスポンシブ対応は適当。PC版もデザイン通りといかなくても良い



【こうなった】
・各コンポーネントで次に進むような時はイベントを発火させて、それをindex.tsで受け取り、index.tsの方で次の処理を呼び出す仕組み。
・最初の画面、問題、結果それぞれでクラスを保持。・・・やっぱりhtmlを基準に考えられぬ。。。
・定数はそれぞれのクラスが記載されているファイル内に記載するようにした。イマイチ。
・スクロール処理最悪。入れるところも良くないし、とにかくダサイ。
・CSSは各コンポーネント毎に用意した。アニメーションに関わる部分などの実装中に追加したスタイルはts内に記載している。良いとは言えないがやりやすかった。
・Lit版にて、同じボタンを２回押下させないようにしたかったが、clickやchangeの監視を解除できなかった。そのため、無駄にフラグを用意した。ダサイ。
・Lit版にて、デコレーターは使用していない



【jsonの仕様】

{
  "theme": テーマ名を指定する
  "shuffle": シャッフル有りなら"true", 無しなら"false"
  "questions": [  問題は配列で保持する！！
    {
      "text": 問題文を指定する
      "hint": ヒントがあればここに記載
      "type": 選択肢がラジオボタンの場合は"radio"、チェックボックスなら"checkbox"
      "choices":[ 選択肢は配列で保持する！！
        {
          "text": 選択肢のテキスト
          "correct": その選択肢をチェックした状態が正解の場合は"true"、はずれなら"false"
        },
        ・・・
      ]
    },
    ・・・
  ]
  "result": [ 結果に表示するテキストは配列で保持する！！（得点の高い順に並べること）
    {
      "pointto": このテキストを表示する最大点数を指定する
      "text": 太字のテキストを指定する
      "message": メッセージ文を指定する
    },
    ・・・
  ]
}
@use "../settings/mixins" as *;
@use "../settings/variables" as *;
@use "../components/extend" as *;
@use 'sass:math';
@use 'sass:color';


$itemCnt: 11;
$picWidth: 100px;
$interval: 30px;
$r: math.div(($picWidth + $interval) * $itemCnt, 2 * math.$pi);
.picList {
  position: relative;
  width: 100%;
  height: 70vh;
  min-height: 420px;
  transform: rotateX(-5deg);
  // transform: rotate3d(1,0,0,-5deg);
  transform-style: preserve-3d;
  perspective: (2 * $r);
}

.pic {
  position: absolute;
  top: 50%;
  left: calc(50% - $picWidth / 2);
  width: $picWidth;
  // height: $picWidth;
  padding: 1em;
  transition: .5s;
  opacity: 0.9;
  background: #eee;
  &_name {
    position: absolute;
    top: 105%;
    left: 0;
    width: 100%;
    font-size: 1rem;
    transition: .5s;
    text-align: center;
    opacity: 0;
  }
}

.picList {
  --base-deg: 0deg; // 1番目の角度
}
// https://sass-lang.com/documentation/modules/color

@for $childNo from 1 through $itemCnt {
  $deg: math.div(360 * ($childNo - 1), $itemCnt);
  $deg2: $deg+deg;
  .pic:nth-child(#{$childNo}) {
    background: adjust-hue(#c7c07e, $deg);
  }

  @for $frontNo from 1 through $itemCnt {
    $rad: math.div(math.$pi * 2 * ($childNo - $frontNo), $itemCnt);

    .picList[data-front='#{$frontNo}'] {
      .pic:nth-child(#{$childNo}) {
        z-index: math.ceil($itemCnt * math.cos($rad));
        transform: translate3d($r * math.sin($rad),0,$r * math.cos($rad)) rotateY(calc($deg2 + var(--base-deg)));

        @if ($childNo == $frontNo) {
          .pic_name {
            opacity: 1;
          }
        }
      }
    }
  }
}

$deg: 10deg;
$rad: math.div(math.$pi * 2 * $deg, 360);

// ボタン
.btn {
  display: inline-block;
  margin-top: 4em;
  padding: 0.5em 1em;
  color: #333;
  border: none;
  background: #eee;

  + .btn {
    margin-left: 2em;
  }
}

// コード
code pre {
  margin-bottom: 3em;
  padding: 0.5em;
  background: #f3f3f3;
}
